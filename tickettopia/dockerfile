# syntax=docker/dockerfile:1
FROM python:3

# Update and install necessary packages
RUN apt-get update && apt-get install -y \
    vim \
    pkg-config \
    default-libmysqlclient-dev \
    python3-dev \
    build-essential \
    default-mysql-client

# Create code directory
RUN mkdir /code

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1

# Set working directory
WORKDIR /code

# Copy requirements file
COPY requirements.txt /code/

# Install Python dependencies
RUN pip install --upgrade pip && \
    pip install -r requirements.txt && \
    pip install django-storages boto3 python-dotenv

# Copy project
COPY . /code/

# Add ARGs for environment variables
ARG DB_NAME
ARG DB_USER
ARG DB_PASSWORD
ARG DB_HOST
ARG DB_PORT
ARG AWS_ACCESS_KEY_ID
ARG AWS_SECRET_ACCESS_KEY
ARG AWS_STORAGE_BUCKET_NAME
ARG AWS_REGION
ARG SECRET_KEY

# Set environment variables from ARGs
ENV DB_NAME=$DB_NAME \
    DB_USER=$DB_USER \
    DB_PASSWORD=$DB_PASSWORD \
    DB_HOST=$DB_HOST \
    DB_PORT=$DB_PORT \
    AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID \
    AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY \
    AWS_STORAGE_BUCKET_NAME=$AWS_STORAGE_BUCKET_NAME \
    AWS_REGION=$AWS_REGION \
    SECRET_KEY=$SECRET_KEY

# Run gunicorn
CMD ["gunicorn", "--bind", "0.0.0.0:8080", "tickettopia.wsgi:application"]