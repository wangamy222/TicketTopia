name: Applying TicketTopia app using terraform

on:
  push:
    branches:
     - main
    paths:
      - 'terraform/**'
      - 'tickettopia/**'
      - 'nginx/**'
      - '.github/**'

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2

    - name: Terraform Init
      working-directory: ./terraform
      run: terraform init

    - name: Check Terraform State
      id: check_state
      working-directory: ./terraform
      run: |
        if terraform show -no-color > /dev/null 2>&1; then
          echo "terraform_exists=true" >> $GITHUB_OUTPUT
        else
          echo "terraform_exists=false" >> $GITHUB_OUTPUT
        fi

    - name: Terraform Refresh
      if: steps.check_state.outputs.terraform_exists == 'true'
      working-directory: ./terraform
      run: terraform refresh

    - name: Terraform Apply (Initial)
      if: steps.check_state.outputs.terraform_exists == 'true'
      working-directory: ./terraform
      run: terraform apply -auto-approve

    - name: Login to Amazon ECR for image
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Authenticate Docker to Amazon ECR
      run: |
        aws ecr get-login-password --region ap-northeast-2 | docker login --username AWS --password-stdin ${{ steps.login-ecr.outputs.registry }}

    - name: Build and push Nginx image to ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: tickettopia-nginx
        IMAGE_TAG: latest
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG ./nginx
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    - name: Build and push Django app image to ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: tickettopia-django-app
        IMAGE_TAG: latest
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG ./tickettopia
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    - name: Terraform Apply (Final)
      if: steps.check_state.outputs.terraform_exists == 'true'
      working-directory: ./terraform
      run: terraform apply -auto-approve

    - name: Terraform Plan (If state doesn't exist)
      if: steps.check_state.outputs.terraform_exists == 'false'
      working-directory: ./terraform
      run: terraform plan