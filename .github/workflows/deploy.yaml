name: Applying TicketTopia app using Terraform

on:
  push:
    branches:
     - main
    paths:
      - 'tickettopia/**'
      - 'nginx/**'
      - '.github/**'

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-2

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build and push Nginx image to ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: tickettopia-nginx
        IMAGE_TAG: latest
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG ./nginx
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    - name: Build and push Django app image to ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: tickettopia-django-app
        IMAGE_TAG: latest
        DB_NAME: ${{ secrets.DB_NAME }}
        DB_USER: ${{ secrets.DB_USER }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        DB_HOST: ${{ secrets.DB_HOST }}
        DB_PORT: ${{ secrets.DB_PORT }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_STORAGE_BUCKET_NAME: ${{ secrets.AWS_STORAGE_BUCKET_NAME }}
        AWS_REGION: ${{ secrets.AWS_REGION }}
        SECRET_KEY: ${{ secrets.SECRET_KEY }}
      run: |
        docker build \
          --build-arg DB_NAME=${DB_NAME} \
          --build-arg DB_USER=${DB_USER} \
          --build-arg DB_PASSWORD=${DB_PASSWORD} \
          --build-arg DB_HOST=${DB_HOST} \
          --build-arg DB_PORT=${DB_PORT} \
          --build-arg AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID} \
          --build-arg AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY} \
          --build-arg AWS_STORAGE_BUCKET_NAME=${AWS_STORAGE_BUCKET_NAME} \
          --build-arg AWS_REGION=${AWS_REGION} \
          --build-arg SECRET_KEY=${SECRET_KEY} \
          -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG ./tickettopia
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG


    - name: Update ECS service
      run: |
        aws ecs update-service \
          --cluster TicketTopia-cluster \
          --service TicketTopia-service \
          --force-new-deployment